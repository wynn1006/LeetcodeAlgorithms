public class Solution {
    public int[] SearchRange(int[] nums, int target) {
        if(nums.Length == 0) return new int[2]{-1,-1};
        
        int l = 0, r = nums.Length - 1, m = (l + r)/2;
        int cPos = -1;
        while(l < r){
            if(nums[m] == target) {
                cPos = m;
                break;
            } 
            else if(nums[m] < target) l = m + 1;
            else if(nums[m] > target) r = m - 1;        
            
            m = (l + r) / 2;
        }
        if(nums[m] == target) cPos = m;
        if(cPos == -1) return new int[2]{-1,-1}; // didn't find it;
        
        int[] result = new int[2]{l,r};
        while(true){
            
            if(r >= 0 && nums[cPos] == nums[r]) {
                result[1] = r;
                break;
            }
            if(r < 0) break;
            r--;
        }
        while(true){
            
            if(l < nums.Length -1 && nums[cPos] == nums[l]){
                result[0] = l;
                break;
            }
            if(l >= nums.Length) break;
            l++;
        }
        
        return result;
    }
}
