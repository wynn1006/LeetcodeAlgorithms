class Solution {
    public int minDistance(String word1, String word2) {
        if(word1.length() == 0) return word2.length();
        if(word2.length() == 0) return word1.length();
        
        int[][] dp = new int[word1.length() + 1][word2.length() + 1];
        
        
        for(int y = 0 ; y < dp.length ; y++){
            dp[y][0] = y;
        }
        for(int x = 0 ; x < dp[0].length ; x++){
            dp[0][x] = x;
        }
        
        for(int y = 1 ; y < dp.length ; y++){
            for(int x = 1 ; x < dp[0].length ; x++){
                if(word1.charAt(y - 1) == word2.charAt(x - 1)){
                    dp[y][x] = dp[y - 1][x - 1];
                } else {
                    dp[y][x] = Math.min(dp[y - 1][x - 1], Math.min(dp[y - 1][x], dp[y][x - 1])) + 1;
                }
            }
        }
        
        return dp[dp.length - 1][dp[0].length - 1];
        
    }
}
